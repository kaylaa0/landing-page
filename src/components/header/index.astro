---
import Navigation from "./Navigation.astro";
import { Icon } from "astro-icon";
import ThemeSwitcher from "./ThemeSwitcher.astro";
import type { NavItem } from "~/types";

const navItems: Array<NavItem> = [
    {
        title: "LinkedIn",
        url: "https://www.linkedin.com/in/-kayla-/",
        isExternal: true,
        hasDropDown: false,
        subMenuItems: [],
    },
    {
        title: "Contact",
        url: "mailto:kaylakyuz@gmail.com",
        isExternal: true,
        hasDropDown: false,
        subMenuItems: [],
    },
];
---

<header
    id="page-header"
    class="absolute bottom-0 z-20 flex w-full items-center justify-between border-b border-transparent px-8 py-4 text-white"
>
    <Navigation>
        {
            navItems.map(
                ({ title, url, isExternal, hasDropDown, subMenuItems }) => (
                    <li class="submenu-item">
                        <a
                            class="text-sm"
                            href={url}
                            target={isExternal ? "_blank" : "_self"}
                        >
                            {title}
                        </a>
                    </li>
                )
            )
        }
        <li
            id="github-button"
            class="menu-item type-icon flex origin-[right_center] scale-0 items-center transition-all duration-500"
        >
            <a
                href="https://github.com/kaylaa0"
                title="Go to the GitHub page"
                class="flex items-center"
            >
                <Icon name="ion/logo-github" />
            </a>
        </li>
        <ThemeSwitcher />
    </Navigation>
    <div id="menu-modal" class="modal hidden" aria-hidden="true">
        <div class="fixed inset-0 bg-default px-8 py-4 text-default">
            <div class="space-y-4" role="dialog" aria-modal="true">
                <header class="text-right">
                    <button
                        id="close-nav-button"
                        type="button"
                        class="btn"
                        aria-label="Close navigation"
                    >
                        <Icon name="mdi/close" class="h-8" />
                    </button>
                </header>
                <div class="flex justify-center">
                    <Icon name="logomark" class="h-16" />
                </div>
                <nav>
                    <ul class="flex flex-col">
                        {
                            navItems.map(
                                ({
                                    title,
                                    url,
                                    isExternal,
                                    hasDropDown,
                                    subMenuItems,
                                }) => (
                                    <li class="submenu-item">
                                        <a
                                            class="text-sm"
                                            href={url}
                                            target={
                                                isExternal ? "_blank" : "_self"
                                            }
                                        >
                                            {title}
                                        </a>
                                    </li>
                                )
                            )
                        }
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</header>
<style>
    :global(.fixed-header) #github-button {
        @apply ml-0 scale-100;
    }
</style>
<script>
    import MicroModal from "micromodal";

    const menuModalId = "menu-modal";

    const header = document.querySelector("#page-header") as HTMLElement;
    const page = document.querySelector(".header-scroll-ref");
    const menu = document.querySelector(`#${menuModalId} ul`);

    const openMenu = () => {
        MicroModal.show(menuModalId, { disableScroll: true });
    };

    const closeMenu = () => {
        MicroModal.close(menuModalId);
    };

    if (page) {
        const d = page.clientHeight - page.scrollTop - header.offsetHeight;
        header.classList.toggle("fixed-header", d < 0);
        page.addEventListener("scroll", () => {
            const d = page.clientHeight - page.scrollTop - header.offsetHeight;
            header.classList.toggle("fixed-header", d < 0);
        });
    } else {
        console.warn("Header scroll fixing referance is undefined.");
    }

    menu!.addEventListener("click", (event) => {
        if ((event.target as HTMLElement).tagName === "A") {
            closeMenu();
        }
    });
</script>
<noscript>
    <style>
        #open-nav-button {
            display: none;
        }
    </style>
</noscript>

<style>
    .fixed-header {
        @apply fixed bottom-auto top-0 !important;
        @apply border-default bg-default text-default !important;
    }
    .modal.is-open {
        @apply block;
    }
</style>
